plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
    id("io.micronaut.test-resources") version "3.6.3"
}

version = "0.1"
group = "com.maciezie.ldi"

repositories {
    mavenCentral()
}

dependencies {

    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut:micronaut-graal")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")


    // core
    implementation("jakarta.annotation:jakarta.annotation-api")

    // http
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-validation")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

    // jpa
    implementation('io.micronaut.data:micronaut-data-hibernate-jpa')
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")

    // security
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-jwt")

    // kafka
    implementation("io.micronaut.kafka:micronaut-kafka")

    // reactive
    implementation 'io.reactivex.rxjava3:rxjava'
    implementation 'io.projectreactor:reactor-core'

    // logger
    runtimeOnly("ch.qos.logback:logback-classic")

    // database
    runtimeOnly("org.postgresql:postgresql")

    // lombok
    compileOnly("org.projectlombok:lombok")

    // open-api
    implementation("io.swagger.core.v3:swagger-annotations")

    // data faker
    implementation 'com.github.javafaker:javafaker:1.0.2'
}

// ./gradlew dockerBuildNative
graalvmNative {
    binaries {
        main {
            imageName.set('mn-graalvm-application')
            buildArgs.add('--verbose')
        }
    }
}

application {
    mainClass.set("com.maciezie.ldi.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.maciezie.ldi.*")
    }
    testResources {
        additionalModules.add("jdbc-postgresql")
        sharedServer = true
    }
}



